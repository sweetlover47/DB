drop table if exists tourist;
drop table if exists rest_tourist;
drop table if exists cargo_tourist;

create sequence tourist_id_seq
    as integer
    minvalue 0
    maxvalue 2147483647;
alter sequence tourist_id_seq owner to nastya;

create table tourist
(
    id       int     not null DEFAULT nextval('tourist_id_seq'),
    name     varchar not null,
    passport varchar not null,
    sex      varchar,
    age      int
);

create table rest_tourist
(

    id_excursion int,
    id_trip      int,
    constraint rest_tourist_pk
        primary key (id_excursion, id_trip)
);

create table cargo_tourist
(
    id_cargo int,
    id_trip  int,
    constraint cargo_tourist_pk
        primary key (id_cargo)
);



create unique index tourist_id_uindex
    on tourist (id);

create unique index tourist_passport_uindex
    on tourist (passport);

alter table tourist
    add constraint tourist_pk
        primary key (id);

create or replace function tourist_validation()
    returns trigger as
$BODY$
begin
    if new.age < 1 or new.age > 122 then
        raise exception 'возраст не может выходить за пределы 1..122';
    end if;
    if new.sex <> 'm' and new.sex <> 'f' then
        raise exception 'у нас существует только два пола';
    end if;
    return new;
end;
$BODY$ language plpgsql;

create trigger tourist_checking
    before insert or update
    on tourist
    for each row
execute procedure tourist_validation();

create function insert_tourist(fio text, pass text, sx text)
    returns int as
$$
DECLARE
    a1 int ;
begin
    a1 = floor(random() * 122 + 1)::int;
    insert into tourist (name, passport, sex, age) values (fio, pass, sx, a1);
    return 0;
end;
$$ language plpgsql;

INSERT INTO tourist (name, passport, sex, age)
VALUES ('Васильев Василий Васильевич', '101123', 'm', 60),
       ('Романов Иван Григорьевич', '155723', 'm', 29),
       ('Иванова Лидия Владимировна', '321654', 'f', 48),
       ('Сагитов Расул Нажмудинович', '888267', 'm', 31),
       ('Абдуллаев Исаак Афган оглы', '524862', 'm', 16),
       ('Любченко Василина Николаевна', '228339', 'f', 54),
       ('Васильева Ирина Афанасьевна', '349167', 'f', 46),
       ('Шевчук Вероника Викторовна', '200133', 'f', 19),
       ('Картон Виктория Олеговна', '578963', 'f', 21),
       ('Лапушкина Анастасия Романовна', '365478', 'f', 20),
       ('Корелин Яков Петрович', '741852', 'm', 65),
       ('Несмущенко Любовь Павловна', '188993', 'f', 38),
       ('Карпов Карл Зимфридович', '688114', 'm', 90),
       ('Карпов Иван Денисович', '746500', 'm', 25),
       ('Капралова Регина Вячеславовна', '300210', 'f', 18),
       ('Злотенко Маргарита Викторовна', '999520', 'f', 26),
       ('Федорук Василий Васильевич', '666222', 'm', 23),
       ('Добрынина Елизавета Леонидовна', '987604', 'f', 25),
       ('Войтенко Евгений Петрович', '101146', 'm', 31),
       ('Петров Виктор Николаевич', '362001', 'm', 36),
       ('Алегрова Вероника Федоровна', '963200', 'f', 37),
       ('Зайцев Вениамин Георгиевич', '853614', 'm', 17),
       ('Антонова Анастасия Георгиевна', '303606', 'f', 20),
       ('Леонов Руслан Олегович', '951357', 'm', 23),
       ('Далыков Бадма Нажмудинович', '824025', 'm', 21),
       ('Руков Сергей Николаевич', '602134', 'm', 31);


INSERT into cargo_tourist
VALUES (1, 79),
       (2, 74),
       (3, 75),
       (4, 75);


insert into rest_tourist
values (2, 1),
       (6, 2),
       (7, 3),
       (8, 3),
       (1, 4),
       (4, 6),
       (5, 4),
       (6, 4),
       (2, 7),
       (3, 8),
       (4, 11),
       (7, 7),
       (8, 8),
       (3, 12),
       (4, 15),
       (7, 14),
       (9, 13),
       (3, 18),
       (5, 17),
       (6, 16),
       (9, 19),
       (1, 20),
       (5, 21),
       (6, 22),
       (8, 22),
       (1, 24),
       (1, 25),
       (1, 26),
       (1, 27),
       (2, 24),
       (2, 25),
       (2, 26),
       (2, 27),
       (6, 24),
       (6, 25),
       (6, 26),
       (6, 27),
       (7, 24),
       (7, 25),
       (7, 26),
       (7, 27),
       (8, 24),
       (8, 25),
       (8, 26),
       (8, 27),
       (3, 28),
       (3, 29),
       (3, 30),
       (3, 31),
       (5, 28),
       (5, 29),
       (5, 30),
       (5, 31),
       (8, 28),
       (8, 29),
       (8, 30),
       (8, 31),
       (9, 28),
       (9, 29),
       (9, 30),
       (9, 31),
       (4, 32),
       (4, 33),
       (4, 34),
       (6, 32),
       (6, 33),
       (6, 34),
       (7, 32),
       (7, 33),
       (7, 34),
       (8, 32),
       (8, 33),
       (8, 34),
       (4, 35),
       (4, 36),
       (4, 37),
       (5, 35),
       (5, 36),
       (5, 37),
       (6, 35),
       (6, 36),
       (6, 37),
       (9, 35),
       (9, 36),
       (9, 37),
       (3, 38),
       (3, 39),
       (3, 40),
       (4, 38),
       (4, 39),
       (4, 40),
       (8, 38),
       (8, 39),
       (8, 40),
       (4, 41),
       (4, 42),
       (6, 41),
       (6, 42),
       (7, 41),
       (7, 42),
       (3, 44),
       (3, 43),
       (3, 45),
       (3, 46),
       (5, 44),
       (5, 43),
       (5, 45),
       (5, 46),
       (6, 44),
       (6, 43),
       (6, 45),
       (6, 46),
       (9, 44),
       (9, 43),
       (9, 45),
       (9, 46),
       (4, 47),
       (4, 48),
       (5, 47),
       (5, 48),
       (8, 47),
       (8, 48),
       (3, 49),
       (3, 50),
       (3, 51),
       (3, 52),
       (4, 49),
       (4, 50),
       (4, 51),
       (4, 52),
       (7, 49),
       (7, 50),
       (7, 51),
       (7, 52),
       (8, 49),
       (8, 50),
       (8, 51),
       (8, 52),
       (2, 53),
       (2, 54),
       (2, 55),
       (2, 56),
       (4, 53),
       (4, 54),
       (4, 55),
       (4, 56),
       (7, 53),
       (7, 54),
       (7, 55),
       (7, 56),
       (8, 53),
       (8, 54),
       (8, 55),
       (8, 56),
       (1, 57),
       (1, 58),
       (1, 59),
       (1, 60),
       (1, 61),
       (3, 57),
       (3, 58),
       (3, 59),
       (3, 60),
       (3, 61),
       (4, 57),
       (4, 58),
       (4, 59),
       (4, 60),
       (4, 61),
       (7, 57),
       (7, 58),
       (7, 59),
       (7, 60),
       (7, 61),
       (8, 57),
       (8, 58),
       (8, 59),
       (8, 60),
       (8, 61),
       (3, 80),
       (3, 62),
       (8, 80),
       (8, 62),
       (2, 64),
       (2, 65),
       (2, 63),
       (6, 64),
       (6, 65),
       (6, 63),
       (8, 64),
       (8, 65),
       (8, 63),
       (2, 67),
       (2, 68),
       (2, 66),
       (3, 67),
       (3, 68),
       (3, 66),
       (4, 67),
       (4, 68),
       (4, 66),
       (1, 70),
       (1, 71),
       (1, 72),
       (1, 69),
       (2, 70),
       (2, 71),
       (2, 72),
       (2, 69),
       (6, 70),
       (6, 71),
       (6, 72),
       (6, 69),
       (8, 70),
       (8, 71),
       (8, 72),
       (8, 69),
       (4, 75),
       (4, 74),
       (4, 73),
       (6, 75),
       (6, 74),
       (6, 73),
       (9, 75),
       (9, 74),
       (9, 73),
       (3, 79),
       (3, 77),
       (3, 76),
       (3, 78),
       (5, 79),
       (5, 77),
       (5, 76),
       (5, 78),
       (8, 79),
       (8, 77),
       (8, 76),
       (8, 78),
       (9, 79),
       (9, 77),
       (9, 76),
       (9, 78);